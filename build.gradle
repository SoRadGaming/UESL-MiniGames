plugins {
    id 'java'
}

group = 'com.soradgaming'
version = '1.7.1'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://steve4744.jfrog.io/artifactory/steve4744-repo'
        // Look for artifacts here if not found at the above location
        artifactUrls "https://steve4744.jfrog.io/artifactory/steve4744-repo/io.github.steve4744/TNTRun_reloaded/9.14-SNAPSHOT/TNTRun_reloaded-9.14-SNAPSHOT.jar"
    }
    maven {
        url = 'https://jitpack.io'
    }
    maven {
        url = 'https://repo.screamingsandals.org/public'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly "me.clip:placeholderapi:2.10.0"
    compileOnly "com.github.A5H73Y:Parkour:6.6"
    compileOnly "org.screamingsandals.bedwars:BedWars-API:0.2.20"
    compileOnly "com.github.ShaneBeeStudios:HungerGames:4.15.6"
    compileOnly "com.soradgaming:BuildBattle:4.5.2-dev17"
    compileOnly "com.soradgaming:TNTRun_reloaded:9.14"
    implementation('com.github.A5H73Y:Parkour:6.6') {
        exclude group: 'pro.husk', module: 'mysql'
        exclude group: 'de.themoep', module: 'inventorygui'
        exclude group: 'com.zaxxer', module: 'HikariCP'
    }
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
